# To enable ProGuard in your project, edit project.properties
# to define the proguard.config property as described in that file.
#
# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in ${sdk.dir}/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the ProGuard
# include property in project.properties.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# Add any project specific keep options here:


#-libraryjars libs/Msc.jar
#-libraryjars libs/jcc-bate-0.7.3.jar
#-libraryjars libs/library.jar
#-libraryjars libs/nineoldandroids-library-2.4.0.jar
#-libraryjars libs/ifly_push_sdk_1.0_1044.jar
#-libraryjars libs/DecRawso.jar
#
#-libraryjars libs/IndoorscapeAlbumPlugin.jar
##-libraryjars libs/BaiduLBS_Android.jar
#-libraryjars libs/mta-sdk-1.6.2.jar
#-libraryjars libs/libammsdk.jar
#-libraryjars libs/open_sdk_r5509_lite.jar
#-libraryjars libs/zxing-3.2.1.jar
#-libraryjars libs/DecRawso.jar
#-libraryjars libs/android-support-v4.jar
#-libraryjars libs/httpmime-4.1.2.jar

-optimizationpasses 7  #指定代码的压缩级别 0 - 7
-dontusemixedcaseclassnames  #是否使用大小写混合
-dontskipnonpubliclibraryclasses  #如果应用程序引入的有jar包，并且想混淆jar包里面的class
-verbose #混淆时是否记录日志（混淆后生产映射文件 map 类名 -> 转化后类名的映射
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*  #淆采用的算法

-keep public class * extends android.app.Activity  #所有activity的子类不要去混淆  
-keep public class * extends android.app.Application  
-keep public class * extends android.app.Service  
-keep public class * extends android.content.BroadcastReceiver  
-keep public class * extends android.content.ContentProvider  
-keep public class * extends android.app.backup.BackupAgentHelper  
-keep public class * extends android.preference.Preference  
-keep public class com.android.vending.licensing.ILicensingService #指定具体类不要去混淆  

-keep class **.R$* { *; }  #保持R文件不被混淆，否则，你的反射是获取不到资源id的
-keepclassmembers class **.R$* {
    public static <fields>;
}
-keep class **.Webview2JsInterface { *; }  #保护WebView对HTML页面的API不被混淆  
-keepclasseswithmembernames class * {  
    native <methods>;  #保持 native 的方法不去混淆  
}  
-keepclasseswithmembers class * {  
    public <init>(android.content.Context, android.util.AttributeSet);  #保持自定义控件类不被混淆，指定格式的构造方法不去混淆  
}  
  
-keepclasseswithmembers class * {  
    public <init>(android.content.Context, android.util.AttributeSet, int);  
}  
  
-keepclassmembers class * extends android.app.Activity {   
    public void *(android.view.View); #保持指定规则的方法不被混淆（Android layout 布局文件中为控件配置的onClick方法不能混淆）  
}  
  
-keep public class * extends android.view.View {  #保持自定义控件指定规则的方法不被混淆  
    public <init>(android.content.Context);  
    public <init>(android.content.Context, android.util.AttributeSet);  
    public <init>(android.content.Context, android.util.AttributeSet, int);  
    public void set*(...);  
}  
  
-keepclassmembers enum * {  #保持枚举 enum 不被混淆  
    public static **[] values();  
    public static ** valueOf(java.lang.String);  
}  
  
-keep class * implements android.os.Parcelable {  #保持 Parcelable 不被混淆（aidl文件不能去混淆）  
    public static final android.os.Parcelable$Creator *;  
}  
  
-keepnames class * implements java.io.Serializable #需要序列化和反序列化的类不能被混淆（注：Java反射用到的类也不能被混淆）  
  
-keepclassmembers class * implements java.io.Serializable { #保护实现接口Serializable的类中，指定规则的类成员不被混淆  
    static final long serialVersionUID;  
    private static final java.io.ObjectStreamField[] serialPersistentFields;  
    !static !transient <fields>;  
    private void writeObject(java.io.ObjectOutputStream);  
    private void readObject(java.io.ObjectInputStream);  
    java.lang.Object writeReplace();  
    java.lang.Object readResolve();  
}  

#如果你的项目中用到了webview的复杂操作 ，最好加入  
-keepclassmembers class * extends android.webkit.WebViewClient {  
     public void *(android.webkit.WebView,java.lang.String,android.graphics.Bitmap);  
     public boolean *(android.webkit.WebView,java.lang.String);  
}  
-keepclassmembers class * extends android.webkit.WebChromeClient {
     public void *(android.webkit.WebView,java.lang.String);  
}  
#对WebView的简单说明下：经过实战检验,做腾讯QQ登录，如果引用他们提供的jar，
#若不加防止WebChromeClient混淆的代码，oauth认证无法回调，
#反编译基代码后可看到他们有用到WebChromeClient，加入此代码即可。

#讯飞推送和语音
-dontwarn com.iflytek.pushclient.**
-dontwarn com.iflytek.psunflower.**
-dontwarn com.google.protobuf.**
-dontwarn com.iflytek.**
-keep class com.iflytek.** {*;}
-keep class assets.**{*;}

-dontwarn android.support.v4.**  
-keep class android.support.v4.** { *; }    
-keep interface android.support.v4.** { *; }  
-keep public class * extends android.support.v4.**   
-keep public class * extends android.app.Fragment  

-keep class org.apache.**{*;}
-keep class android.**{*;}
-keep class com.nineoldandroids.**{*;}
-keepattributes *Annotation*,*Exceptions*,Signature

#百度地图
-dontwarn com.baidu.**
-dontwarn com.baidu.mapapi.** 
-dontwarn com.baidu.location.** 
-keep class com.baidu.mapapi.** {*;}
-keep class com.baidu.** { *; }
-keep class vi.com.** {*;}   
-keep class vi.com.gdi.bgl.android.**{*;}
-keep class assets.** {*; }  
-keep class vi.com.gdi.bgl.** {*; }  
-keep class com.baidu.location.** { *; }
-keep class assets.**{*;}

#微信
#-dontwarn com.tencent.mm.** 
#-keep class com.tencent.mm.sdk.** {*;}
#-keep class com.tencent.mm.**{*;}
#-keep class com.tencent.mm.sdk.openapi.WXMediaMessage {*;}
#-keep class com.tencent.mm.sdk.openapi.** implements com.tencent.mm.sdk.openapi.WXMediaMessage$IMediaObject {*;}

#-keep class com.tencent.mm.sdk.** {
#   *;
#}

#腾讯open sdk
-dontwarn com.tencent.**  
-keep class com.tencent.** { *; }   
-keep class assets.**{*;}

#压缩jar
-keep class com.library.**{*;}

#环信SDK
-keep class com.hyphenate.** {*;}
-keep class com.superrtc.** {*;}
-dontwarn  com.hyphenate.**
-dontwarn  com.superrtc.**

#百度移动 统计
-keep class com.baidu.bottom.** { *; }
-keep class com.baidu.kirin.** { *; }
-keep class com.baidu.mobstat.** { *; }

-keep class com.parse.**{*;}
-keep class com.alipay.**{*;}
-dontwarn  com.parse.**
-dontwarn  com.alipay.**

-keep class android.net.**{*;}
-keep class org.apache.**{*;}
-keep class com.android.internal.http.multipart.**{*;}
-dontwarn  android.net.**
-dontwarn  org.apache.**
-dontwarn  com.android.internal.http.multipart.**

-keepattributes *Annotation*
-keepclassmembers class ** {
@org.greenrobot.event.Subscribe <methods>;
}
-keep enum org.greenrobot.event.ThreadMode { *; }
-keepclassmembers class * extends org.greenrobot.event.util.ThrowableFailureEvent {
<init>(java.lang.Throwable);
}

#如果用用到Gson解析包的，直接添加下面这几行就能成功混淆，不然会报错。
-keepattributes Signature
# Gson specific classes
-keep class sun.misc.Unsafe { *; }
# Application classes that will be serialized/deserialized over Gson
-keep class com.google.gson.** { *; }
-keep class com.google.gson.stream.** { *; }


#mob
-keep class android.net.http.SslError
-keep class android.webkit.**{*;}
-keep class cn.sharesdk.**{*;}
-keep class com.sina.**{*;}
-keep class m.framework.**{*;}
-keep class **.R$* {*;}
-keep class **.R{*;}
-dontwarn cn.sharesdk.**
-dontwarn **.R$*

#butterknife
-keep class butterknife.** { *; }
-dontwarn butterknife.internal.**
-keep class **$$ViewBinder { *; }

-keepclasseswithmembernames class * {
    @butterknife.* <fields>;
}

-keepclasseswithmembernames class * {
    @butterknife.* <methods>;
}

##---------------Begin: proguard configuration for Gson  ----------
# Gson uses generic type information stored in a class file when working with fields. Proguard
# removes such information by default, so configure it to keep all of it.
-keepattributes Signature

# For using GSON @Expose annotation
-keepattributes *Annotation*

# Gson specific classes
-keep class sun.misc.Unsafe { *; }
#-keep class com.google.gson.stream.** { *; }

# Application classes that will be serialized/deserialized over Gson
-keep class com.cmcc.iot.gatewaycloud.http.bean.request.** {  *; }
-keep class com.cmcc.iot.gatewaycloud.http.bean.response.** { *; }


-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,Annotation,EnclosingMethod
-keep class com.cmcc.iot.gatewaycloud.http.bean.request.**$*{ *; }
-keep class com.cmcc.iot.gatewaycloud.http.bean.response.**$*{ *; }
###这里注意了，要具体到自己使用的javabean
-keep com.terminus.facerecord.beans.** { *; }
##---------------End: proguard configuration for Gson  ----------


# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}


